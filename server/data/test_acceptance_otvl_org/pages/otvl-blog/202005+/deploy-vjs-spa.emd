![Article image](/assets/images/deploy-vjs-spa/deploy_vjs_spa.jpg "Vue.js Single Page Application schema"){: class="BRAND__page-img-max-itself" }

# Deploying a Vue.js Single Page Application

The article describes a few questions related to the deployment of a Vue.js single-page application
and corresponding solutions.

## A short presentation

### Technical overview

### Benefits and constraints

The [Single-Page Application](https://en.wikipedia.org/wiki/Single-page_application) architecture
provides great features to the users and the developpers.
On the user side, page transitions are smoother and network data usage is optimal.
On the developper side, the software architecture
and the corresponding client and server implementations are simpler to design and to maintain.
And finally, from both point of views,
the use of graphical components libraries enable to achieve a great level of ergonomy.


## Deployed components architecture

## Routing

### Vue.js router

### Apache fallback URLs

## Configuring at deployment time

### Vue.js packaging

### Static content


## CORS

## Useful links

### Articles and guides

- [codemag - HTML5 History](https://www.codemag.com/Article/1301091/HTML5-History-Clean-URLs-for-Deep-linking-Ajax-Applications)
- [css-tricks - Using the HTML5 History API](https://css-tricks.com/using-the-html5-history-api/)
- [mozilla - Working with the History API](https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API)
- [vue router - HTML5 History Mode](https://router.vuejs.org/guide/essentials/history-mode.html)

### References

- [Vue.js](https://vuejs.org/)
- [Quasar framework](https://quasar.dev/)
- [History API](https://developer.mozilla.org/en-US/docs/Web/API/History_API)
